#+TITLE: to-do
#+SUBTITLE: na-da feito

#+options: H:6

Projects that I'm currently working on and new ideas to be implemented in
=manguezal=.

* Generator
** Refactor
*** Store =Pandoc= in the model instead of text.
:PROPERTIES:
:CUSTOM_ID: pandoc-in-model
:END:

** Org packages integrations
*** WAIT Org-roam-timestamps -- [[https://github.com/ThomasFKJorna/org-roam-timestamps][link]]
 - Funciona com arquivos Org n√£o-roam? E com markdown?
*** WAIT Org-transclusion -- [[https://github.com/nobiot/org-transclusion][link]]
*** Some sort of spaced repetition (decide which)

** Layout/style/content
 - [ ] Page subtitles
 - [ ] Style =[ ]= and =[k/n]= in headlines and lists
 - [ ] Style =TODO= in headlines  
   - [ ] Include other TODO types, make it globally customizable
 - [ ] Style [[*Tags][tags]]
 - [ ] Fold sections
** Links

Reference: [[https://orgmode.org/manual/Hyperlinks.html][Hiperlinks no Manual do Org]].
*** [?] [2/6] Internal links
+ [X] =[[#anchor]] ~~> CUSTOM_ID: anchor=
+ [-] =[[*Headline]] ~~> ** Headline=
  - [-] This should work even if headline has =custom_id=
+ [X] =[[anchor]] ~~> <<anchor>>=
+ [ ] =[[named]] ~~> #+name: named=
+ [ ] Smart link labels:
- Targets
    #+begin_src org
    1. one item
    2. <<target>>another item
    Here we refer to item [[target]].
    #+end_src
    the link =[[target]]= should have label =2=.
  - Custom IDs
    #+begin_src org
,* Headline
:PROPERTIES:
:CUSTOM_ID: custom-id
:END:
Here we refer to [[#custom-id]]
    #+end_src
    the link =[[#custom-id]]= should have label =Headline=

+ [ ] Alvos "radiais" =<<<alvo>>>=
+ +Fuzzy: procurar aproximadamente em cabe√ßalhos e nomes+
  (provavelmente n√£o vai ser implementado)

*** [?] [2/4] External links
  + [X] "=file:=", "=./=" ou "=/="
    + Sufixos:
      + =::NNN= :: linha do arquivo =->= exportar algo tipo "[[http:][arquivo]]
        (linha NNN)"
      + =::*headline= :: cabe√ßalho 
      + =::#headline= :: √¢ncora
  + [X] "=attachment:=" (anexos)
  + [-] "=id=" --- suportar apenas =org-roam=? (para implementar em geral,
    precisaria de um p√≥s-processo para linkar. See [[*Process links in =render=][Process links in =render=]])
  + [ ] N√£o-oficiais
    + [ ] "=pdftools:=" --- ver [[https://github.com/fuxialexander/org-pdftools][org-pdftools]]
    
      exportar como pdf incorporado, linkando a p√°gina/local exato
      
    + [ ] "=arxiv:=", "=wiki:=", "=nlab:=", ...?
*** Process links in =render=
This could be done after [[#pandoc-in-model]].
** Tags 
:PROPERTIES:
:CUSTOM_ID: tags
:END:
O org-roam acrescenta tags tanto a partir das tags associadas √† nota (na forma ~#+filetags: :tag1:tag2:~ para arquivos, ou na forma ~T√≠tulo :tag1:tag2:~ para se√ß√µes), como a partir da estrutura do diret√≥rio.

Tags v√£o possibibilitar n√£o s√≥ filtrar/listar assuntos relacionados, como tamb√©m ser√£o uma forma rudimentar de listar o conte√∫do de diret√≥rios.

Detalhes:
- caso especial para arquivos com nome =index.html=, pois eles representam todo o conte√∫do do diret√≥rio.
- podemos usar o =select_tags= e =exclude_tags= para filtrar o documento (ser√° que isso j√° √© feito pelo Pandoc? testar).

*** Implementa√ß√£o

#+begin_src haskell
type Tag = Slug
         
data RoamPost = RoamPost {
  ...
  , postTags :: [Tag]
  }
#+end_src

** Markdown?
md-roam? ou compatibilidade com Obsidian?
* Upstream
** Ema
- disponibilizar ~switchRoute~ no Haskell, para seguir o arquivo
  aberto no Emacs.
* Ideas üí°
** Executar filtros lua definidos no arquivo üòà
** Incluir org e pre√¢mbulo com links attachment:


[[./todo][Same page link]]
