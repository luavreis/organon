#+TITLE: to-do ü•∏
#+SUBTITLE: na-da feito

#+options: H:6

Coisas a serem implementadas no site.

* Crazy ideas üí°
** Executar filtros lua definidos no arquivo üòà
** Incluir arquivos com links attachment:

* Gerador
** Integra√ß√£o
*** Org-roam-timestamps -- [[https://github.com/ThomasFKJorna/org-roam-timestamps][link]]
 - Funciona com arquivos Org n√£o-roam? E com markdown?
** Markup customizada
- [ ] Destacar um trecho com =!= ... =!=.
** Layout/estilo/conte√∫do
 - [ ] Subt√≠tulos
 - [ ] Estilizar =[k/n]= nos cabe√ßalhos e listas
 - [ ] Estilizar =TODO= nos cabe√ßalhos  
 - [ ] Estilizar [[tags][tags]]
** Links
Os links n√£o est√£o funcionando muito bem.

Refer√™ncia: [[https://orgmode.org/manual/Hyperlinks.html][Hiperlinks no Manual do Org]].
*** [2/6] Links internos
+ [ ] Absolutizar: \\
  =#anchor ~~> link/to/page#anchor=
+ [X] =[[#texto]] ~~> CUSTOM_ID: texto=
+ [ ] =[[*Texto]] ~~> ** Texto=
+ [X] =[[texto]] ~~> <<texto>>=
+ [ ] =[[texto]] ~~> #+name: texto=
+ [ ] N√∫meros, em certos contextos:
  #+begin_src rst
  1. one item
  2. <<target>>another item
  Here we refer to item [[target]].
  #+end_src
  o link =[[target]]= vira =2=.
+ Alvos "radiais" =<<<alvo>>>=
+ +Fuzzy: procurar aproximadamente em cabe√ßalhos e nomes+
  (provavelmente n√£o vai ser implementado)

*** [0/4] Links externos
  + [ ] "=file:=", "=./=" ou "=/="
    + Sufixos:
      + =::NNN= :: linha do arquivo =->= exportar algo tipo "[[http:][arquivo]]
        (linha NNN)"
      + =::*headline= :: cabe√ßalho 
      + =::#headline= :: √¢ncora
  + [ ] "=attachment:=" (anexos)
  + [ ] "=id=" --- suportar apenas =org-roam=? (para implementar em
    geral, precisaria de um p√≥s-processo para linkar, ou ter "p√°ginas
    redicionadoras" que apenas redirecionam o ID para o endere√ßo certo...)
  + [ ] N√£o-oficiais
    + [ ] "=pdftools:=" --- ver [[https://github.com/fuxialexander/org-pdftools][org-pdftools]]
    
      exportar como pdf incorporado, linkando a p√°gina/local exato
      
    + [ ] "=arxiv:=", "=wiki:=", "=nlab:=", ...?
** Tags <<tags>>
:PROPERTIES:
:CUSTOM_ID: tags
:END:
O org-roam acrescenta tags tanto a partir das tags associadas √† nota (na forma
~#+filetags: :tag1:tag2:~ para arquivos, ou na forma ~T√≠tulo :tag1:tag2:~ para
se√ß√µes), como a partir da estrutura do diret√≥rio.

Tags v√£o possibibilitar n√£o s√≥ filtrar/listar assuntos relacionados, como tamb√©m
ser√£o uma forma rudimentar de listar o conte√∫do de diret√≥rios.

Detalhes:
- caso especial para arquivos com nome =index.html=, pois eles representam todo
  o conte√∫do do diret√≥rio.
- podemos usar o =select_tags= e =exclude_tags= para filtrar o documento (ser√°
  que isso j√° √© feito pelo Pandoc? testar).

*** Implementa√ß√£o

#+begin_src haskell
type Tag = Slug
         
data RoamPost = RoamPost {
  ...
  , postTags :: [Tag]
  }
#+end_src

** Markdown?
md-roam? ou compatibilidade com Obsidian?

* Upstream
** Ema
- disponibilizar ~switchRoute~ no Haskell, para seguir o arquivo
  aberto no Emacs.
